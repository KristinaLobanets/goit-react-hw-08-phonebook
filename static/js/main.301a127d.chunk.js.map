{"version":3,"sources":["components/Header/Header.module.css","redux/actions/contactAction.js","redux/taskOperations/authOperation.js","components/LogOut/LogOut.module.css","redux/actions/authactions.js","components/LogOut/LogOut.js","redux/authSelectors/authSelectors.js","components/Header/Header.js","routes.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/redusers/contactReducer.js","redux/redusers/authReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactError","addContactSuccess","deleteContactRequest","deleteContactError","deleteContactSuccess","getContactRequest","geteContactError","getContactSuccess","searchContact","Axios","defaults","baseURL","token","headers","common","Authorization","userRegistration","credentials","dispatch","authactions","registrationRequest","axios","post","then","res","data","registrationSuccess","catch","err","registrationError","userLogin","loginRequest","loginSuccess","loginError","userLogOut","logOutRequest","logOutSuccess","logOutError","getCurrentUser","getState","getingtoken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","mapDispatchToProps","onLogOut","authOperation","connect","state","name","user","className","styles","logout","logoutbtn","onClick","logoutname","isAuthenticated","authSelectors","Header","to","HeaderLink","exact","HeaderText","path","label","component","lazy","private","restricted","Component","routeProps","render","props","App","this","onGetCurrentUser","fallback","routes","map","route","key","contacts","createReducer","actionType","action","payload","filter","item","id","combineReducers","initialState","email","error","authPersistConfig","storage","whitelist","store","configureStore","reducer","tasks","contactReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.301a127d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"HeaderLink\":\"Header_HeaderLink__3CeYh\",\"HeaderText\":\"Header_HeaderText__2gsQz\"};","import { createAction } from \"@reduxjs/toolkit\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// const addContact = createAction(ADD_CONTACT, (taskName, taskPhone) => ({\n//   payload: { contacts: { name: taskName, number: taskPhone, id: uuidv4() } },\n// }));\n\nconst addContactRequest = createAction(\"@contacts/addRequest\");\n\nconst addContactError = createAction(\"@contacts/addError\");\n\nconst addContactSuccess = createAction(\"@contacts/addSuccess\");\n\nconst deleteContactRequest = createAction(\"@contacts/deleteRequest\");\n\nconst deleteContactError = createAction(\"@contacts/deleteError\");\n\nconst deleteContactSuccess = createAction(\"@contacts/deleteSuccess\");\n\nconst getContactRequest = createAction(\"@contacts/getRequest\");\n\nconst geteContactError = createAction(\"@contacts/getError\");\n\nconst getContactSuccess = createAction(\"@contacts/getSuccess\");\n\nconst searchContact = createAction(\"@contact/filterContact\");\n\n// const removeTask = (taskid) => ({\n//   type: DELETE_CONTACT,\n//   payload: { id: taskid },\n// });\n\nexport default {\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  deleteContactSuccess,\n  getContactRequest,\n  geteContactError,\n  getContactSuccess,\n  searchContact,\n};\n","import axios from \"axios\";\nimport authactions from \"../actions/authactions\";\nimport Axios from \"axios\";\n\nAxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\nconst token = {\n  set(token) {\n    Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unSet() {\n    Axios.defaults.headers.common.Authorization = ``;\n  },\n};\n\nconst userRegistration = (credentials) => (dispatch) => {\n  dispatch(authactions.registrationRequest());\n  axios\n    .post(\"/users/signup\", credentials)\n    .then((res) => {\n      token.set(res.data.token);\n      dispatch(authactions.registrationSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(authactions.registrationError(err));\n    });\n};\n\nconst userLogin = (credentials) => (dispatch) => {\n  dispatch(authactions.loginRequest());\n  axios\n    .post(\"/users/login\", credentials)\n    .then((res) => {\n      token.set(res.data.token);\n      dispatch(authactions.loginSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(authactions.loginError(err));\n    });\n};\n\nconst userLogOut = () => (dispatch) => {\n  dispatch(authactions.logOutRequest());\n  axios\n    .post(\"/users/logout\")\n    .then(() => {\n      token.unSet();\n      dispatch(authactions.logOutSuccess());\n    })\n    .catch((err) => {\n      dispatch(authactions.logOutError(err));\n    });\n};\n\nconst getCurrentUser = (credentials) => (dispatch, getState) => {\n  const {\n    auth: { token: getingtoken },\n  } = getState();\n  if (!getingtoken) {\n    return;\n  }\n  token.set(getingtoken);\n  dispatch(authactions.getCurrentUserRequest());\n  axios\n    .get(\"/users/current\", credentials)\n    .then((res) => {\n      dispatch(authactions.getCurrentUserSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(authactions.getCurrentUserError(err));\n    });\n};\n\nexport default { userRegistration, userLogin, userLogOut, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"LogOut_logout__1bIW8\",\"logoutbtn\":\"LogOut_logoutbtn__9zzAj\",\"logoutname\":\"LogOut_logoutname__3IKIk\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registrationRequest = createAction(\"@auth/registrationRequest\");\n\nconst registrationError = createAction(\"@auth/registrationError\");\n\nconst registrationSuccess = createAction(\"@auth/registrationSuccess\");\n\nconst loginRequest = createAction(\"@auth/loginRequest\");\n\nconst loginError = createAction(\"@auth/loginError\");\n\nconst loginSuccess = createAction(\"@auth/loginSuccess\");\n\nconst logOutRequest = createAction(\"@auth/logOutRequest\");\n\nconst logOutError = createAction(\"@auth/logOutError\");\n\nconst logOutSuccess = createAction(\"@auth/logOutSuccess\");\n\nconst getCurrentUserRequest = createAction(\"@auth/getCurrentUserRequest\");\n\nconst getCurrentUserError = createAction(\"@auth/getCurrentUserError\");\n\nconst getCurrentUserSuccess = createAction(\"@auth/getCurrentUserSuccess\");\n\nexport default {\n  registrationRequest,\n  registrationError,\n  registrationSuccess,\n  loginRequest,\n  loginError,\n  loginSuccess,\n  logOutRequest,\n  logOutError,\n  logOutSuccess,\n  getCurrentUserRequest,\n  getCurrentUserError,\n  getCurrentUserSuccess,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperation from \"../../redux/taskOperations/authOperation\";\nimport styles from \"./LogOut.module.css\";\n\nconst LogOut = ({ name, onLogOut }) => {\n  return (\n    <div className={styles.logout}>\n      <button className={styles.logoutbtn} onClick={onLogOut}>\n        Log Out\n      </button>\n      <p className={styles.logoutname}>Hello {name}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.auth.user.name,\n});\nconst mapDispatchToProps = { onLogOut: authOperation.userLogOut };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogOut);\n","const isAuthenticated = (state) => state.auth.token;\n\nconst getUserEmail = (state) => state.auth.user.email;\n\nexport default { isAuthenticated, getUserEmail };\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./Header.module.css\";\nimport LogOut from \"../LogOut/LogOut\";\nimport authSelectors from \"../../redux/authSelectors/authSelectors\";\nimport { connect } from \"react-redux\";\n\nconst Header = ({ isAuthenticated }) => {\n  return (\n    <div className={styles.Header}>\n      <NavLink to=\"/\" className={styles.HeaderLink} exact>\n        <p className={styles.HeaderText}>Home</p>\n      </NavLink>\n      {isAuthenticated ? (\n        <NavLink to=\"/contacts\" className={styles.HeaderLink} exact>\n          <p className={styles.HeaderText}>Contacts</p>\n        </NavLink>\n      ) : (\n        <>\n          <NavLink to=\"/register\" className={styles.HeaderLink} exact>\n            <p className={styles.HeaderText}> Register</p>\n          </NavLink>\n          <NavLink to=\"/login\" className={styles.HeaderLink} exact>\n            <p className={styles.HeaderText}>Login</p>\n          </NavLink>\n        </>\n      )}\n      <LogOut />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Header);\n","import { lazy } from \"react\";\n\nexport default [\n  {\n    path: \"/\",\n    label: \"Home\",\n    exact: true,\n    component: lazy(() => import(\"./components/HomePage/HomePage.js\")),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"./components/Register/Register.js\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/login\",\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"./components/Login/Login.js\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/contacts\",\n    label: \"Contacts\",\n    exact: true,\n    component: lazy(() => import(\"./components/phonebook/Phonebook.js\")),\n    private: true,\n    restricted: false,\n  },\n];\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/authSelectors/authSelectors\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/authSelectors/authSelectors\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  restricted,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport { connect } from \"react-redux\";\nimport authOperation from \"./redux/taskOperations/authOperation\";\nimport routes from \"./routes\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <div>\n          <Header />\n          <Suspense fallback={<h1>Loading...</h1>}>\n            <Switch>\n              {routes.map((route) =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute\n                    key={route.label}\n                    {...route}\n                    restricted={route.restricted}\n                  />\n                )\n              )}\n            </Switch>\n          </Suspense>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { onGetCurrentUser: authOperation.getCurrentUser };\n\nexport default connect(null, mapDispatchToProps)(App);\n","import actionType from \"../actions/contactAction\";\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\n// const contacts = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionType.addContact.type:\n//       return [...state, payload.contacts];\n\n//     case actionType.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst contacts = createReducer([], {\n  [actionType.getContactSuccess]: (state, action) => action.payload,\n  [actionType.deleteContactSuccess]: (state, action) =>\n    state.filter((item) => item.id !== action.payload),\n  [actionType.addContactSuccess]: (state, action) => [...state, action.payload],\n});\n\nconst filter = createReducer(\"\", {\n  [actionType.searchContact]: (state, action) => action.payload,\n});\n\nexport default combineReducers({ contacts: contacts, filter: filter });\n","import actionType from \"../actions/authactions\";\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [actionType.registrationSuccess]: (state, { payload }) => payload.user,\n  [actionType.loginSuccess]: (state, { payload }) => payload.user,\n  [actionType.getCurrentUserSuccess]: (state, { payload }) => payload,\n  [actionType.logOutSuccess]: () => initialState,\n});\n\nconst token = createReducer(null, {\n  [actionType.registrationSuccess]: (state, { payload }) => payload.token,\n  [actionType.loginSuccess]: (state, { payload }) => payload.token,\n  [actionType.logOutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [actionType.registrationError]: (state, { payload }) => payload,\n  [actionType.loginError]: (state, { payload }) => payload,\n  [actionType.logOutError]: (state, { payload }) => payload,\n  [actionType.getCurrentUserError]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({ user: user, token: token, error: error });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./redusers/contactReducer\";\nimport authReducer from \"../redux/redusers/authReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst authPersistConfig = { key: \"auth\", storage, whitelist: [\"token\"] };\n\nexport const store = configureStore({\n  reducer: {\n    tasks: contactReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />,\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}