{"version":3,"sources":["components/Register/Register.module.css","components/Register/Register.js"],"names":["module","exports","Register","state","name","email","password","handleEmail","e","setState","target","value","handlePassword","handleName","handleSubmit","preventDefault","newUser","props","onRegistration","this","className","styles","Registerform","onSubmit","type","placeholder","onChange","Component","mapDispatchToProps","authOperation","userRegistration","connect"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,iC,4HCI3BC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEJ,MAAOG,EAAEE,OAAOC,S,EAGlCC,eAAiB,SAACJ,GAChB,EAAKC,SAAS,CAAEH,SAAUE,EAAEE,OAAOC,S,EAGrCE,WAAa,SAACL,GACZ,EAAKC,SAAS,CAAEL,KAAMI,EAAEE,OAAOC,S,EAGjCG,aAAe,SAACN,GACdA,EAAEO,iBADkB,MAEc,EAAKZ,MACjCa,EAAU,CAAEZ,KAHE,EAEZA,KACgBC,MAHJ,EAENA,MACiBC,SAHX,EAECA,UAErB,EAAKW,MAAMC,eAAeF,GAC1B,EAAKP,SAAS,CAAEL,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAEvC,IAAD,SAC2Ba,KAAKhB,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,6BACE,0BAAMc,UAAWC,IAAOC,aAAcC,SAAUJ,KAAKL,cACnD,2BACEU,KAAK,OACLC,YAAY,OACZrB,KAAK,OACLsB,SAAU,SAAClB,GAAD,OAAO,EAAKK,WAAWL,IACjCG,MAAOP,IAET,2BACEoB,KAAK,QACLC,YAAY,QACZrB,KAAK,QACLsB,SAAU,SAAClB,GAAD,OAAO,EAAKD,YAAYC,IAClCG,MAAON,IAET,2BACEmB,KAAK,WACLC,YAAY,WACZrB,KAAK,WACLsB,SAAU,SAAClB,GAAD,OAAO,EAAKI,eAAeJ,IACrCG,MAAOL,IAET,sD,GApDaqB,aA2DjBC,EAAqB,CAAEV,eAAgBW,IAAcC,kBAE5CC,sBAAQ,KAAMH,EAAdG,CAAkC7B","file":"static/js/6.4f29c3a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Registerform\":\"Register_Registerform__u_zEm\"};","import React, { Component } from \"react\";\nimport styles from \"./Register.module.css\";\nimport { connect } from \"react-redux\";\nimport authOperation from \"../../redux/taskOperations/authOperation\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleEmail = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePassword = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const newUser = { name, email, password };\n    this.props.onRegistration(newUser);\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div>\n        <form className={styles.Registerform} onSubmit={this.handleSubmit}>\n          <input\n            type=\"name\"\n            placeholder=\"name\"\n            name=\"name\"\n            onChange={(e) => this.handleName(e)}\n            value={name}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"email\"\n            name=\"email\"\n            onChange={(e) => this.handleEmail(e)}\n            value={email}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={(e) => this.handlePassword(e)}\n            value={password}\n          />\n          <button>Registration</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { onRegistration: authOperation.userRegistration };\n\nexport default connect(null, mapDispatchToProps)(Register);\n"],"sourceRoot":""}